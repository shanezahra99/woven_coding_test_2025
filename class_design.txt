## Class Design / Initial Notes (SZ)

This was my initial notes sheet to begin and used to re-think the game loop.

indexes 

current_turn = 0
board [0, 1, 2, 3, 4, 5, 6, 7, 8]
roll [0 , 1, 2, 3]
Player [0 , 1, 2, 3]
board_poisition == player.current_poisition after roll.

utility functions
get_current_player
get_board_position
get_current_roll


example turn 1st turn
------------
player = 0
roll = 0
board_poisition = players current poisition after roll.
------------

example turn 1st turn
------------
player = 0
roll = 0
board_poisition = players current poisition after roll.
------------




User class
- first name
- Money
- property owned
- current space?? [which index they are in the array]
- is bankrupt (boolean)


Game class
- Game turn / tick 
- Win / loss conditions
- board logic
- dice logic
- pass go logic
- property logic

User Interface Class
- holds ui for console 

Main 
- Initiate game ui in console

Board
- [0, 1, 2, 3, 4, 5, 6, 7, 8]
- length == items in the board dict array.
- players increment 1 movement every turn / tick
- once they reach end of array they start at 0 again.
- current position in array is recorded in user class
